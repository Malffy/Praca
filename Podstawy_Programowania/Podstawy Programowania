#include "pch.h"
#include <iostream>
#include<vector>
#include<map>
#include <ctime>
#include <cstdlib>
using namespace std;

void wypisz(int w)
{
	cout << w << "\n";
}

void wypisz(vector<int>tab)
{
	for (int i = 0;i < tab.size();i++)
	{
		cout << tab[i] << ", ";
	}
	cout << endl;
}

void wypisz(map<int, int>m)
{
	for (auto item : m)
	{
		cout << item.first << "->" << item.second << endl;
	}
}

bool CzyNalezy(vector<int>tab, int szukana_wartosc)
{
	for (int i = 0;i < tab.size();i++)
	{
		if (tab[i]== szukana_wartosc)
		{
			return true;
		}
	}
	return false;
}

bool CzyZawiera(vector<int>tab, vector<int>szukane_wartosci)
{
	for (int i = 0;i < szukane_wartosci.size();i++)
	{
		if (!CzyNalezy(tab,szukane_wartosci[i]))
		{
			return false;
		}
	}
	return true;
}

int max(vector<int>tab)
{
	int wynik = tab[0];
	for (int i = 0;i < tab.size();i++)
	{
		if (tab[i]>wynik)
		{
			wynik = tab[i];
;		}
	}
	return wynik;
}

vector<int>unikalne(vector<int>tab)
{
	vector<int>wynik;
	for (int i = 0;i < tab.size();i++)
	{
		if (!CzyNalezy(tab,wynik[i]))
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}


bool CzyNalezyKlucz(map<int, int>m,int n)
{
	for (auto i : m)
	{
		if (i.first==n)
		{
			return true;
		}
	}
	return false;
}

map<int, int>czestosc(vector<int>tab)
{
	map<int, int>wynik;
	for (int i = 0;i < tab.size();i++)
	{
		if (!CzyNalezyKlucz(wynik, tab[i]))
		{
			wynik.insert({ tab[i],1 });
		}
		else
		{
			wynik[tab[i]]++;
		}
	}
	return wynik;
}

bool palindrom(vector<int>tab)
{
	int koniec = tab.size() - 1;
	for (int i = 0;i < tab.size() / 2;i++)
	{
		if (tab[i] != tab[koniec - i])
		{
			return false;
		}
	}
	return true;
}

vector<int>podzielnosc(vector<int>tab,int dzielnik,int reszta=0)
{
	vector<int>wynik;
	for (int i = 0;i < tab.size();i++)
	{
		if (tab[i]%dzielnik==reszta)
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<int>generuj(int n,int max=50,int min=0 )
{
	vector<int>wynik;
	for (int i = 0;i < n;i++)
	{
		wynik.push_back(rand()%(max-min)+min);
	}
	return wynik;
}

int maxD(vector<int>tab)
{
	int licznik = 0;
	tab.push_back(1);
	vector<int>w;
	for (int i=0;i<tab.size();i++)
	{
		if (tab[i] % 2 == 0)
		{
			licznik++;
		}
		else
		{
			w.push_back(licznik);
			licznik = 0;
		}
	}
	return max(w);
}

bool czy_pierwsza(int x)
{
	if (x < 2)
	{
		return false;
	}
	for (int i = 2; i < x; i++)
	{
		if (x%i == 0)
		{
			return false;
		}
	}
	return true;
}

vector<int>n_pierwszych(int n)
{
	vector<int>w;
	for (int i = 0; i < n; i++)
	{
		if (czy_pierwsza(i))
		{
			w.push_back(i);
		}
		else
		{
			n++;
		}
	}
	return w;
}

void blizniacze_liczby_pierwsze(int n)
{
	for (int i = 0;; i++)
	{
		if (czy_pierwsza(i) && i > n)
		{
			cout << i << i + 2;
			break;
		}
	}
}

int SumaCzesciowa(vector<int>tab)
{
	int w = 0;
	for (int i = 0; i < tab.size(); i++)
	{
		for (int j = i; j < tab.size(); j++)
		{
			int sum = 0;
			for (int k = i; k <= j; k++)
			{
				sum += tab[k];
				if (sum > w)
				{
					w = sum;
				}
			}
		}
	}
	return w;
}

int main()
{
	srand(time(NULL));
	vector<int>tab = { 1,2,3 };
	vector<int>szukane_wartosci = { 1,2 };
	vector<int>tab2 = { 4,4,5,5,6,6 };
	wypisz(tab);
	cout << "Max\n";
	wypisz(max(tab));
	cout << "Unikalne\n";
	wypisz(unikalne(tab2));
	cout << "Czestosc\n";
	wypisz(czestosc(tab2));
	if (CzyNalezy(tab, 4))
	{
		cout << "Nalezy\n";
	}
	else
	{
		cout << "Nie nalezy\n";
	}
	if (CzyZawiera(tab, szukane_wartosci))
	{
		cout << "Zawiera\n";
	}
	else
	{
		cout << "Nie zawiera\n";
	}
	cout << "Podzielnosc\n";
	wypisz(podzielnosc(tab,3));
	
	int x;
	cin >> x;
	for (int i = 2; i < x; i++)
	{
		int n = 0;
		for (int j = i;j<=x; j = j * i)
		{
			n++;
			if (x == j)
			{
				cout << "y=" << i << " n=" << n;
			}
		}
	}
	
	int a;
	cin >> a;

	for (int i = 0; i < a * 2 + 3; i++)
	{
		cout << "*";
	}
	cout << endl;

	for (int i = 0; i < a; i++)
	{
		cout << "* ";
		for (int j = i; j < a - 1; j++)
		{
			cout << " ";
		}
		for (int j = i * 2 + 1; j > 0; j--)
		{
			cout << "*";
		}
		for (int j = i; j < a - 1; j++)
		{
			cout << " ";
		}
		cout << " *";

		cout << endl;
	}

	cout << "* ";
	for (int i = 0; i < a - 2; i++)
	{
		cout << " ";
	}

	cout << "***";
	for (int i = 0; i < a - 2; i++)
	{
		cout << " ";
	}
	cout << " *";
	cout << endl;
	for (int i = 0; i < a * 2 + 3; i++)
	{
		cout << "*";
	}

	system("pause");
}

